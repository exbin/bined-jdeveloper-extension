<extension xmlns="http://jcp.org/jsr/198/extension-manifest"
  id="org.exbin.bined.jdeveloper"
  version="0.2.0.1"
  esdk-version="1.0"
  rsbundle-class="org.exbin.bined.jdeveloper.Res">

  <name>${EXTENSION_NAME}</name>
  <owner>ExBin Project</owner>

  <dependencies>
    <import>oracle.ide</import>
    <import>oracle.ide.xmlef</import>
  </dependencies>
  <required-bundles>
    <bundle>oracle.jewt-core</bundle>
    <bundle>oracle.javamodel-rt</bundle>
    <bundle>oracle.javatools-nodeps</bundle>
    <bundle>oracle.ide</bundle>
    <bundle>oracle.idert</bundle>
    <bundle>oracle.jewt-core</bundle>
    <bundle>oracle.javatools</bundle>
    <bundle>oracle.icons</bundle>
  </required-bundles>

    <feature id="org.exbin.bined.jdeveloper" xmlns="http://xmlns.oracle.com/ide/extension">
      <name>${EXTENSION_NAME}</name>
      <category-id>IDE</category-id>
      <description><![CDATA[
<p>Hexadecimal editor based on bined library. Use "Open as Binary" context menu item to edit files in projects.</p>

<h1>Preview</h1>
<p><img src="https://bined.exbin.org/images/bined-jdeveloper-extension-preview-0.2.0.png" alt="bined-jdeveloper-extension-preview"/></p>

<h1>Features</h1>
<ul><li>Visualize data as numerical (hexadecimal) codes and text representation</li>
<li>Codes can be also binary, octal or decimal</li>
<li>Support for Unicode, UTF-8 and other charsets</li>
<li>Insert and overwrite edit modes</li>
<li>Searching for text / hexadecimal code with found matches highlighting</li>
<li>Support for undo/redo</li>
<li>Support for files with size up to exabytes</li></ul>
    ]]></description>
      <type>
            <service can-user-disable="true" reload-if-used="true"/>
      </type>
      <license>Apache License, Version 2.0</license>
      <copyright>ExBin Project</copyright>
     </feature>

  <trigger-hooks xmlns="http://xmlns.oracle.com/ide/extension">
    <!-- TODO Declare triggering functionality provided by extension: org.exbin.bined.jdeveloper -->
    <triggers>
       <editors xmlns="http://xmlns.oracle.com/ide/extension">
          <editor id="org.exbin.bined.jdeveloper.BinEdEditor"
                  label="Binary"
                  default="false"
                  duplicable="false"
                  restore-at-startup="false"
                  multifile="true"
                  editor-class="org.exbin.bined.jdeveloper.BinEdFileEditor">
            <node-type class="org.exbin.bined.jdeveloper.BinaryNode" />
            <!--<node-type class="oracle.ide.model.TextNode" />
            <node-type class="oracle.ide.model.ImageNode" />
            <node-type class="oracle.ide.model.DataNode" />
            <node-type class="oracle.ide.model.DeployableTextNode" />
            <node-type class="oracle.ide.model.UnrecognizedTextNode" />
            <node-type class="oracle.ide.model.XMLDataNode" /> -->
          </editor>
        </editors>

      <actions xmlns="http://xmlns.oracle.com/jdeveloper/1013/extension">
        <action id="org.exbin.bined.jdeveloper.openAsBinaryAction">
          <properties>
            <property name="Name">Open As Binary</property>
            <property name="SmallIcon">res:/org/exbin/bined/jdeveloper/resources/icons/icon.png</property>
          </properties>
        </action>

        <action id="org.exbin.bined.jdeveloper.openFileAsBinaryAction">
          <properties>
            <property name="Name">Open As Binary...</property>
            <property name="SmallIcon">res:/org/exbin/bined/jdeveloper/resources/icons/icon.png</property>
          </properties>
        </action>
      </actions>

      <controllers xmlns="http://xmlns.oracle.com/ide/extension">
        <controller class="org.exbin.bined.jdeveloper.OpenAsBinaryController">
          <update-rules>
            <update-rule rule="always-enabled">
              <action id="org.exbin.bined.jdeveloper.openAsBinaryAction">
                <label>Open As Binary</label>
              </action>
            </update-rule>
          </update-rules>
        </controller>

        <controller class="org.exbin.bined.jdeveloper.OpenFileAsBinaryController">
          <update-rules>
            <update-rule rule="always-enabled">
              <action id="org.exbin.bined.jdeveloper.openFileAsBinaryAction">
                <label>Open As Binary...</label>
              </action>
            </update-rule>
          </update-rules>
        </controller>
      </controllers>

      <!--
        Install context menus in the navigator, editor, and structure pane (explorer)
        which use the same action defined above.
      -->
      <context-menu-hook rule="always-enabled">
        <site idref="navigator, editor, explorer"/>
          <menu>
            <!-- 'weight' is used to control where the section appears in
             the menu. Weights are sorted in ascending order, each unique
             value is its own section. -->
            <!-- section element must be in namespace
             http://jcp.org/jsr/198/extension-manifest. -->
            <section xmlns="http://jcp.org/jsr/198/extension-manifest" id="org.exbin.bined.jdeveloper.customsection" weight="1.0">
              <!-- For menu items and submenus, weight determines the
               order within a menu section. Items are sorted in ascending
               order or in the order they are added if the weight is not
               unique. -->
             <item action-ref="org.exbin.bined.jdeveloper.openAsBinaryAction"></item>
           </section>
         </menu>
      </context-menu-hook>

      <menu-hook xmlns="http://jcp.org/jsr/198/extension-manifest">
        <!-- 
          Add the action in its own separator group at the top of the File 
          menu. 
        -->
        <menus>
          <menubar id="javax.ide.view.MAIN_WINDOW_MENUBAR_ID">
            <menu id="javax.ide.FILE_MENU_ID">
              <section id="org.exbin.bined.jdeveloper.custommainsection" before="javax.ide.NEW_SECTION_ID">
                <item action-ref="org.exbin.bined.jdeveloper.openFileAsBinaryAction"></item>
              </section>
            </menu>
          </menubar>
        </menus>


        <!--
          Add the action as toolbar button in its own separator group immediately after the 
          existing "save" toolbar buttons.
        -->           
        <!-- <toolbars>
          <toolbar id="javax.ide.view.MAIN_WINDOW_TOOLBAR_ID">
            <X- Add a new section after the first section in the toolbar. -X>
            <section id="javax.ide.tck.toolbar.testsection"
                   after="javax.ide.NEW_SECTION_ID">
              <item action-ref="org.exbin.bined.jdeveloper.openAsBinaryAction"></item>
            </section>
          </toolbar>
        </toolbars> -->
      </menu-hook>
    </triggers>
  </trigger-hooks>

  <hooks>
    <!-- TODO Declare functionality provided by extension: org.exbin.bined.jdeveloper -->
    <jdeveloper-hook xmlns="http://xmlns.oracle.com/jdeveloper/1013/extension">
      <!-- Addin to register Binary editor for any editor tab -->
      <!-- <addins>
        <addin>org.exbin.bined.jdeveloper.BinEdEditorAddin</addin>
      </addins> -->

      <actions>
        <action id="org.exbin.bined.jdeveloper.openAsBinary">
          <properties>
            <property name="Name">Open As Binary</property>
            <property name="SmallIcon">res:/org/exbin/bined/jdeveloper/resources/icons/icon.png</property>
            <property name="LongDescription">Open As Binary</property>
          </properties>
          <controller-class>org.exbin.bined.jdeveloper.OpenAsBinaryController</controller-class>
        </action>

        <action id="org.exbin.bined.jdeveloper.openFileAsBinary">
          <properties>
            <property name="Name">Open As Binary</property>
            <property name="SmallIcon">res:/org/exbin/bined/jdeveloper/resources/icons/icon.png</property>
            <property name="LongDescription">Open As Binary...</property>
          </properties>
          <controller-class>org.exbin.bined.jdeveloper.OpenFileAsBinaryController</controller-class>
        </action>
      </actions>
      <addins>
        <addin>org.exbin.bined.jdeveloper.MyAddin</addin>
      </addins>
    </jdeveloper-hook>
  </hooks>
</extension>
